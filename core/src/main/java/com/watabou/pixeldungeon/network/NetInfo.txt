version 4  //increment when modify
1. Самописный протокол.
    1.1 Поля пакета
        1.1.1 Команда: код команды, integer
        1.1.2 Данные (может отсутствовать): массив байт, описан в пункте 1.2
    1.2 Данные передаются примитивами в фиксированном порядке
        1.2.1 Примитивы передаются значению
        1.2.2 Строки и массивы передаются с указанием их длины перед передачей
        1.2.3 Непримитивные типы приводятся к структурам из примитивов и массивов и передаются как примитивы
    1.3 Запросы ничем не разделяются
    1.4 Синхронизационный пакет
        1.4.1 Синхронизационный пакет - пакет фиксированной длины, содержащий определенную фиксированную последовательность байт  блиной не менее 4х байтов
        1.4.2 Этот функционал не является обязательным к реализации
            1.4.3.1 Если при получении синхронизационного пакета,реаллизация этого состояния отсутствует, соединение разрывается
        1.4.3 Синхронизационный пакет отправляется при ошибке обработки входящего пакета
        1.4.4.1 Все данные с молмента ошибки и до синхронизационного пакета отбрасваются
        1.4.5 Если принимающая сторона имеет проблемы с обработкой запросов, она запрашивает этот пакет и отбрасывает все необработанные запросы до этого пакета.
            1.4.5.1: возможные причины:
                A) ошибка транспортного уровня
                Б) ошибка при формировании запроса на отправляющей стороне и/или ошибка в реаализации отправляющей стороны
                В) ошибка в работеобработчика запроса и/или ошибка в его реаллизации
                Г) иная причина

2. Топология - звезда. (Единый сервер, множество клиентов.)
3. Функция info для предметов и окружения работает на стороне клиента (если сервер не требует иного, тогда это явно передается).
    3.1 сервер отправит специальный пакет клиенту, сообщающий, что для функции Info последний ОБЯЗАН обратиться к серверу за получением конечной строки.

4. Сервер передает клиенту мир так, как клиент его видит
    4.1 вместо скрытых ловушек передается просто пол
    4.2 Аналогично для осталього
5. Синхронизация состояния:
    5.1 Сервер передает измененное или полное состояние
    5.2 Сервер передает состояние некоторых UI элементов
    5.3 Для синхронизации состояния со стороны сервера не требуется предварительных пакетов
    5.4 Клиент имеет прао запросить синхронизацию состояния
        5.4.1 Сервер имеет право не удовлетворять этот запрос
        5.4.2 Синхронизация состояния проводится стандартными пакетами без специальных пакетов перед ней

FromVersion: 3 //Copy from "version"
Translator: translate.yandex.ru //change if use other
1. The transfer is based on its own rules. //Json is too heavy for this task
    1.1 the Mechanism is based on sending requests in blocks in the format " id, parameters"
        1.1.1 the Request consists of an operation code and parameters
    1.2 the Transfer is carried out by the methods of (de)serialization of objects
    1.3 requests are not separated by anything //there is no need for This. You just pass the data and that's it. The order is always the same. There is no point in separating them.
    1.4 If an incoming request processing error occurs the receiving party sends a request to send a synchronization packet
        1.4.1 Sync packet - a fixed-length packet containing a specific sequence of bytes
        1.4.2 the Synchronization package is used to indicate the latest data
        1.4.3 If the receiving party has problems processing requests, it requests this package and discards all unprocessed requests before this package.
            1.4.3.1: possible causes:
                A) transport level error
                B) an error in generating the request on the sending side and / or an error in reaalizing the sending side
                C) an error in the operation of the request handler and / or an error in its implementation
                D) other reason

2. Single server, multiple clients.
3. The info function for objects and world works on the client side (unless the server requires otherwise, then this is explicitly passed).
    3.1 the server will send a special packet to the client informing that for the Info function, the Latter MUST contact the server to get the final string.

4. The server passes the world to the client as the client sees it (i.e., instead of hidden traps, just the floor is passed).
5. The client has the right to send a special package about full synchronization of the world. The server must perform this procedure.
6. The server has the right to perform the full synchronization procedure at its own request and is obliged to perform it at the request of the client.